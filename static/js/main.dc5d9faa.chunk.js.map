{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","score","highscore","App","state","message","cardsArray","cards","clickedArray","highScore","shuffle","_this","sort","Math","random","resetValues","setState","handleClick","cardId","console","log","includes","alert","concat","Object","toConsumableArray","length","_this2","this","components_Wrapper_Wrapper","components_Header_Header","map","card","components_Card_Card","key","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"ytEAWeA,SARF,SAAAC,GAAK,OACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAKL,EAAMM,WAAWN,EAAMO,MACvDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCD9BC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCS1CC,SATA,SAAAd,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMa,UAC9BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACYJ,EAAMe,MADlB,eACqCf,EAAMgB,qBC+DpCC,oNA9DbC,MAAQ,CACNC,QAAS,6BACTJ,MAAO,EACPK,WAAYC,EACZC,aAAc,GACdC,UAAW,KAGbC,QAAU,kBAAMC,EAAKP,MAAME,WAAWM,KAAK,kBAAKC,KAAKC,SAAW,QAEhEC,YAAc,WACZJ,EAAKK,SAAS,CACZf,MAAO,EACPK,WAAYC,EACZC,aAAc,QAIlBS,YAAc,SAACC,GACbC,QAAQC,IAAIF,EAAQ,sBAEfP,EAAKP,MAAMI,aAAaa,SAASH,IAmBpCI,MAAM,YACNX,EAAKI,eAnBLJ,EAAKK,SAAS,CAEZf,MAAOU,EAAKP,MAAMH,MAAQ,EAC1BK,WAAYK,EAAKD,UACjBF,aAAY,GAAAe,OAAAC,OAAAC,EAAA,EAAAD,CAAMb,EAAKP,MAAMI,cAAjB,CAA+BU,KAC1C,WACGP,EAAKP,MAAMH,QAAUU,EAAKP,MAAME,WAAWoB,QAC7CJ,MAAM,WACNX,EAAKI,eAEDJ,EAAKP,MAAMH,MAAQU,EAAKP,MAAMK,WAChCE,EAAKK,SAAS,CACZP,UAAWE,EAAKP,MAAMH,mFAW1B,IAAA0B,EAAAC,KACN,OACEzC,EAAAC,EAAAC,cAACwC,EAAD,KACE1C,EAAAC,EAAAC,cAACyC,EAAD,CAAQ7B,MAAO2B,KAAKxB,MAAMH,MAAOC,UAAW0B,KAAKxB,MAAMK,WAAvD,6BACCmB,KAAKxB,MAAME,WAAWyB,IAAI,SAAAC,GAAI,OAC7B7C,EAAAC,EAAAC,cAAC4C,EAAD,CACAzC,WAAYmC,EAAKV,YACjBxB,GAAIuC,EAAKvC,GACTyC,IAAKF,EAAKvC,GACVI,MAAOmC,EAAKnC,kBAvDJsC,IAAMC,YCDxBC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.dc5d9faa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = props => (\r\n    <div className=\"card\" onClick={()=> props.clickCount(props.id)}>\r\n        <div className=\"img-container\">\r\n            <img alt={props.name} src={props.image}/>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => (\r\n    <div className=\"header\">\r\n        <div className=\"title\">{props.children}</div>\r\n        <div className=\"scores\">\r\n            Score: {props.score} Highscore: {props.highscore}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\nimport Card from \"./components/Card/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    message: \"Click on an image to start\",\n    score: 0,\n    cardsArray: cards,\n    clickedArray: [],\n    highScore: 0,\n  }\n  \n  shuffle = () => this.state.cardsArray.sort(()=> Math.random() - 0.5);\n\n  resetValues = () => {\n    this.setState({\n      score: 0,\n      cardsArray: cards,\n      clickedArray: [],\n    });\n  }\n\n  handleClick = (cardId) => {\n    console.log(cardId, \"inside handleClick\");\n\n    if (!this.state.clickedArray.includes(cardId)) {\n      this.setState({\n\n        score: this.state.score + 1,\n        cardsArray: this.shuffle(),\n        clickedArray: [...this.state.clickedArray, cardId]\n      }, () => {\n        if (this.state.score === this.state.cardsArray.length){\n          alert(\"you won\");\n          this.resetValues();\n        } else {\n          if (this.state.score > this.state.highScore) {\n            this.setState({\n              highScore: this.state.score,\n            });\n          }\n        }\n      })\n    } else {\n      alert(\"you lost\");\n      this.resetValues();\n    }\n  }\n\n  render(){\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highScore}>Nick Cartoons Click Game!</Header>\n        {this.state.cardsArray.map(card => (\n          <Card \n          clickCount={this.handleClick}\n          id={card.id}\n          key={card.id}\n          image={card.image}\n          />\n        ))}\n      </Wrapper>\n    )\n  };\n}\n\nexport default App;\n\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}